# version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    build:
      context: ./
      dockerfile: nginx/Dockerfile
      args:
        - APP_NAME=${APP_NAME}
        - APP_HOST=${APP_HOST}
        - APP_URL_BASE=${APP_URL_BASE}
        - APP_URL=${APP_URL}
        - HOST_ENV=${COMPOSE_PROJECT_NAME}
    # Removemos os ports para não expor ao host
    volumes:
      - ../../../www:/var/www/
      - ./nginx/default.template.conf:/etc/nginx/templates/default.template.conf
      - ./nginx/25-envsubst-on-templates.sh:/docker-entrypoint.d/25-envsubst-on-templates.sh
      - ./nginx/conf.d:/etc/nginx/conf.d/
    depends_on:
      - php
      - mysql
    environment:
      - APP_NAME=${APP_NAME}
      - APP_HOST=${APP_HOST}
      - APP_URL_BASE=${APP_URL_BASE}
      - APP_URL=${APP_URL}
      - PHP_HOST=php
      - HOST_ENV=${COMPOSE_PROJECT_NAME}
    # Labels para o Traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxyrev-network"

      # Configuração para comunicação externa
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.rule=Host(`${APP_HOST}`) && PathPrefix(`/${APP_NAME}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.service=${COMPOSE_PROJECT_NAME}-service"

      # Configuração para comunicação interna
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-internal.rule=Host(`${APP_NAME}-internal`) && PathPrefix(`/${APP_NAME}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-internal.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-internal.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-internal.service=${COMPOSE_PROJECT_NAME}-service"

      # Serviço HTTP interno
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-service.loadbalancer.server.port=80"

      # Headers de segurança
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-secure-headers.headers.sslRedirect=true"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-secure-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-secure-headers.headers.stsSeconds=31536000"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.middlewares=${COMPOSE_PROJECT_NAME}-secure-headers"
    networks:
      app-network:
        aliases:
          - ${APP_NAME}-internal
      proxyrev-network:
        aliases:
          - ${APP_NAME}-external

  php:
    dns:
      - 9.9.9.9
      - 152.92.1.10
      - 152.92.238.10
    container_name: ${COMPOSE_PROJECT_NAME}-php
    build:
      context: ../../
      dockerfile: docker/development/php/Dockerfile
      args:
        - APP_NAME=${APP_NAME}
        - APP_HOST=${APP_HOST}
        - APP_URL_BASE=${APP_URL_BASE}
        - APP_URL=${APP_URL}
        - APP_PREFIX=${APP_PREFIX}
        - APP_ENV=${APP_ENV}
        - APP_DEBUG=${APP_DEBUG}
        - MYSQL_ROOT_PASSWORD="${MYSQL_ROOT_PASSWORD}"
        - MYSQL_DATABASE="${MYSQL_DATABASE}"
        - MYSQL_USER="${MYSQL_USER}"
        - MYSQL_PASSWORD="${MYSQL_PASSWORD}"
        - HOST_ENV=${HOST_ENV}
        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
        - COMPOSE_PROJECT_DIR=${COMPOSE_PROJECT_NAME}
        - REDIS_HOST=${REDIS_HOST}
        - REDIS_PASSWORD=${REDIS_PASSWORD}
        - REDIS_PORT=${REDIS_PORT}
        - DB_CONNECTION=${DB_CONNECTION}
        - DB_HOST=${DB_HOST}
        - DB_PORT=${DB_PORT}
        - DB_DATABASE=${MYSQL_DATABASE}
        - DB_USERNAME=${MYSQL_USER}
        - DB_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ../../../www:/var/www/
      - ./php/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./php/php-fpm.conf:/usr/local/etc/php-fpm.d/zz-log.conf
      - ./logs/php-fpm:/var/log/php-fpm
      - ${COMPOSE_PROJECT_NAME}-composer-cache:/tmp/composer # Cache persistente
      - ${COMPOSE_PROJECT_NAME}-npm-cache:/tmp/npm-cache
      - ${COMPOSE_PROJECT_NAME}-yarn-cache:/tmp/yarn-cache
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - HOST_ENV=${COMPOSE_PROJECT_NAME}
      - PHP_IDE_CONFIG=serverName=docker
      - COMPOSER_CACHE_DIR=/tmp/composer
      - MYSQL_ROOT_PASSWORD="${MYSQL_ROOT_PASSWORD}"
      - MYSQL_DATABASE="${MYSQL_DATABASE}"
      - MYSQL_USER="${MYSQL_USER}"
      - MYSQL_PASSWORD="${MYSQL_PASSWORD}"
      - APP_NAME=${APP_NAME}
      - APP_HOST=${APP_HOST}
      - APP_URL_BASE=${APP_URL_BASE}
      - APP_URL=${APP_URL}
      - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
      - COMPOSE_PROJECT_DIR=${COMPOSE_PROJECT_NAME}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - mysql
      - redis
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    volumes:
      - ${COMPOSE_PROJECT_NAME}-mysql-data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    networks:
      - app-network

  # mailpit:
  #   image: axllent/mailpit
  #   container_name: ${COMPOSE_PROJECT_NAME}-mailpit
  #   restart: unless-stopped
  #   volumes:
  #     - ${COMPOSE_PROJECT_NAME}-mailpit-data:/data
  #   ports:
  #     - 8025:8025
  #   environment:
  #     MP_MAX_MESSAGES: 5000
  #     MP_DATABASE: /data/mailpit.db
  #     MP_SMTP_AUTH_ACCEPT_ANY: 1
  #     MP_SMTP_AUTH_ALLOW_INSECURE: 1
  #   networks:
  #     - app-network

networks:
  app-network:
    name: ${COMPOSE_PROJECT_NAME}-network
    driver: bridge
  proxyrev-network:
    name: proxyrev-network
    external: true
